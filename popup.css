@import url('https://fonts.googleapis.com/css2?family=Courier+Prime:ital,wght@0,400;0,700;1,400;1,700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Rubik+Mono+One&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Luckiest+Guy&display=swap');
:root {
  --radius: 200px; /* デフォルトの半径を定義 */
}

body {
  display: grid;
  place-items: center;
  height: 240px;
  width: 400px;
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: repeat(10, 1fr);
  margin: 13px 0;
  background-color: rgb(20, 30, 36);
}

#selects {
  height: 100%;
  width: 100%;
  grid-column: 1/6;
  grid-row: 5/6;
  display: grid; 
  align-items: center;
  justify-content: center;
  padding: 15px;
}
#startStopButton {
  background-color: rgb(255, 44, 44); /* 緑色 */
  color: white; /* 文字色を白に変更 */
  border: none;
  padding: 10px 20px; /* 余白の設定 */
  border-radius: 5px; /* 角丸にする */
  font-family: Rubik Mono One;
}
#startStopButton:hover {
  background-color: darkred; /* 押された後の背景色を設定 */
}

#stopButton {
  background-color: darkred; /* 押された後の背景色を設定 */
  color: white; /* 文字色を白に変更 */
  border: none;
  padding: 10px 20px; /* 余白の設定 */
  border-radius: 5px; /* 角丸にする */
  font-weight: bold; /* 太字にする */
  font-family: Rubik Mono One;
}

.circle {
  width: 60px;
  height: 60px;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  grid-column: 2/5;
  grid-row: 2/5;
  background-color: #ffe5d1f7; /* 円の背景色 */
  border-radius: 50%; /* 円形にする */
  position: relative;
}
.circle4 {
  width: 220px;
  height: 220px;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  grid-column: 2/5;
  grid-row: 2/5;
  background-color: rgb(255, 255, 255); /* 円の背景色 */
  border-radius: 50%; /* 円形にする */
  position: relative;
  overflow: hidden;
}
.circle5 {
  width: 230px;
  height: 230px;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  grid-column: 2/5;
  grid-row: 2/5;
  background-color: rgb(255, 140, 0); /* 円の背景色 */
  border-radius: 50%; /* 円形にする */
  position: relative;
  overflow: hidden;
}
.circle2 {
  width: 200px;
  height: 200px;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  grid-column: 2/5;
  grid-row: 2/5;
  background-color: rgb(254, 130, 42); /* 円の背景色 */
  border-radius: 50%; /* 円形にする */
  position: relative;
  overflow: hidden;
}
.triangle1{
  height: auto;
  width: auto;
  display: grid;
  grid-column: 1/2;
  grid-row: 1/2;
}
.triangle2{
  height: auto;
  width: auto;
  display: grid;
  grid-column: 1/2;
  grid-row: 1/2;
}
.triangle3{
  height: auto;
  width: auto;
  display: grid;
  grid-column: 1/2;
  grid-row: 1/2;
}
.triangle4{
  height: auto;
  width: auto;
  display: grid;
  grid-column: 1/2;
  grid-row: 1/2;
}
.triangle5{
  height: auto;
  width: auto;
  display: grid;
  grid-column: 1/2;
  grid-row: 1/2;
}
.triangle6{
  height: auto;
  width: auto;
  display: grid;
  grid-column: 1/2;
  grid-row: 1/2;
}
.triangle1::before {
  content: "";
  width: 0;
  height: 0;
  grid-column: 1/2;
  grid-row: 1/2;
  transform: translate(calc(var(--radius) / 2), calc(var(--radius) / 2 - var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg))));
  transform-origin: left bottom; /* 中心を縦横の中心に設定 */
  border-left: 5px solid rgb(255, 255, 255); 
  border-right: calc(var(--radius) * 1.25 * sin(calc(var(--angle) * 1deg))) solid transparent;
  border-top: calc(var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg))) solid rgb(255, 44, 44);
}
.triangle2::before {
  content: "";
  width: 0;
  height: 0;
  grid-column: 1/2;
  grid-row: 1/2;
  transform-origin: left bottom; /* 中心を縦横の中心に設定 */
  border-left: 5px solid rgb(255, 255, 255); 
  transform: translate(calc(var(--radius) / 2), calc(var(--radius) / 2 - var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg)))) rotate(60deg);
  border-right: calc(var(--radius) * 1.25 * sin(calc(var(--angle) * 1deg))) solid transparent;
  border-top: calc(var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg))) solid rgb(255, 44, 44);
}
.triangle3::before {
  content: "";
  width: 0;
  height: 0;
  grid-column: 1/2;
  grid-row: 1/2;
  transform-origin: left bottom; /* 中心を縦横の中心に設定 */
  border-left: 5px solid rgb(255, 255, 255); 
  transform: translate(calc(var(--radius) / 2), calc(var(--radius) / 2 - var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg)))) rotate(120deg);
  border-right: calc(var(--radius) * 1.25 * sin(calc(var(--angle) * 1deg))) solid transparent;
  border-top: calc(var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg))) solid rgb(255, 44, 44);
}
.triangle4::before {
  content: "";
  width: 0;
  height: 0;
  grid-column: 1/2;
  grid-row: 1/2;
  transform-origin: left bottom; /* 中心を縦横の中心に設定 */
  border-left: 5px solid rgb(255, 255, 255); /* 枠線の太さ (2px) と色 (黒) を指定 */
  transform: translate(calc(var(--radius) / 2), calc(var(--radius) / 2 - var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg)))) rotate(180deg);
  border-right: calc(var(--radius) * 1.25 * sin(calc(var(--angle) * 1deg))) solid transparent;
  border-top: calc(var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg))) solid rgb(255, 44, 44);
}
.triangle5::before {
  content: "";
  width: 0;
  height: 0;
  grid-column: 1/2;
  grid-row: 1/2;
  transform-origin: left bottom; /* 中心を縦横の中心に設定 */
  border-left: 5px solid rgb(255, 255, 255); /* 枠線の太さ (2px) と色 (黒) を指定 */
  transform: translate(calc(var(--radius) / 2), calc(var(--radius) / 2 - var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg)))) rotate(240deg);
  border-right: calc(var(--radius) * 1.25 * sin(calc(var(--angle) * 1deg))) solid transparent;
  border-top: calc(var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg))) solid rgb(255, 44, 44);
}
.triangle6::before {
  content: "";
  width: 0;
  height: 0;
  grid-column: 1/2;
  grid-row: 1/2;
  transform-origin: left bottom; /* 中心を縦横の中心に設定 */
  border-left: 5px solid rgb(255, 255, 255); /* 枠線の太さ (2px) と色 (黒) を指定 */
  transform: translate(calc(var(--radius) / 2), calc(var(--radius) / 2 - var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg)))) rotate(300deg);
  border-right: calc(var(--radius) * 1.25 * sin(calc(var(--angle) * 1deg))) solid transparent;
  border-top: calc(var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg))) solid rgb(255, 44, 44);
}
.circle3 {
  width: 200px;
  height: 200px;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  grid-column: 2/5;
  grid-row: 2/5;
  background-color: rgb(255, 44, 44); /* 円の背景色 */
  border-radius: 50%; /* 円形にする */
  position: relative;
  overflow: hidden;
}
.triangle10{
  height: auto;
  width: auto;
  display: grid;
  grid-column: 1/2;
  grid-row: 1/2;
}
.triangle20{
  height: auto;
  width: auto;
  display: grid;
  grid-column: 1/2;
  grid-row: 1/2;
}
.triangle30{
  height: auto;
  width: auto;
  display: grid;
  grid-column: 1/2;
  grid-row: 1/2;
}
.triangle40{
  height: auto;
  width: auto;
  display: grid;
  grid-column: 1/2;
  grid-row: 1/2;
}
.triangle50{
  height: auto;
  width: auto;
  display: grid;
  grid-column: 1/2;
  grid-row: 1/2;
}
.triangle60{
  height: auto;
  width: auto;
  display: grid;
  grid-column: 1/2;
  grid-row: 1/2;
}
.triangle10::before {
  content: "";
  width: 0;
  height: 0;
  grid-column: 1/2;
  grid-row: 1/2;
  transform: translate(calc(var(--radius) / 2), calc(var(--radius) / 2 - var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg))));
  border-left: 5px solid rgb(255, 255, 255); /* 枠線の太さ (2px) と色 (黒) を指定 */
  transform-origin: left bottom; /* 中心を縦横の中心に設定 */
  border-right: calc(var(--radius) * 1.25 * sin(calc(var(--angle) * 1deg))) solid transparent;
  border-top: calc(var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg))) solid rgb(254, 130, 42);
}
.triangle20::before {
  content: "";
  width: 0;
  height: 0;
  grid-column: 1/2;
  grid-row: 1/2;
  transform-origin: left bottom; /* 中心を縦横の中心に設定 */
  border-left: 5px solid rgb(255, 255, 255); /* 枠線の太さ (2px) と色 (黒) を指定 */
  transform: translate(calc(var(--radius) / 2), calc(var(--radius) / 2 - var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg)))) rotate(60deg);
  border-right: calc(var(--radius) * 1.25 * sin(calc(var(--angle) * 1deg))) solid transparent;
  border-top: calc(var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg))) solid rgb(254, 130, 42);
}
.triangle30::before {
  content: "";
  width: 0;
  height: 0;
  grid-column: 1/2;
  grid-row: 1/2;
  transform-origin: left bottom; /* 中心を縦横の中心に設定 */
  border-left: 5px solid rgb(255, 255, 255); /* 枠線の太さ (2px) と色 (黒) を指定 */
  transform: translate(calc(var(--radius) / 2), calc(var(--radius) / 2 - var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg)))) rotate(120deg);
  border-right: calc(var(--radius) * 1.25 * sin(calc(var(--angle) * 1deg))) solid transparent;
  border-top: calc(var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg))) solid rgb(254, 130, 42);
}
.triangle40::before {
  content: "";
  width: 0;
  height: 0;
  grid-column: 1/2;
  grid-row: 1/2;
  transform-origin: left bottom; /* 中心を縦横の中心に設定 */
  border-left: 5px solid rgb(255, 255, 255); /* 枠線の太さ (2px) と色 (黒) を指定 */
  transform: translate(calc(var(--radius) / 2), calc(var(--radius) / 2 - var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg)))) rotate(180deg);
  border-right: calc(var(--radius) * 1.25 * sin(calc(var(--angle) * 1deg))) solid transparent;
  border-top: calc(var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg))) solid rgb(254, 130, 42);
}
.triangle50::before {
  content: "";
  width: 0;
  height: 0;
  grid-column: 1/2;
  grid-row: 1/2;
  transform-origin: left bottom; /* 中心を縦横の中心に設定 */
  border-left: 5px solid rgb(255, 255, 255); /* 枠線の太さ (2px) と色 (黒) を指定 */
  transform: translate(calc(var(--radius) / 2), calc(var(--radius) / 2 - var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg)))) rotate(240deg);
  border-right: calc(var(--radius) * 1.25 * sin(calc(var(--angle) * 1deg))) solid transparent;
  border-top: calc(var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg))) solid rgb(254, 130, 42);
}
.triangle60::before {
  content: "";
  width: 0;
  height: 0;
  grid-column: 1/2;
  grid-row: 1/2;
  transform-origin: left bottom; /* 中心を縦横の中心に設定 */
  border-left: 5px solid rgb(255, 255, 255); /* 枠線の太さ (2px) と色 (黒) を指定 */
  transform: translate(calc(var(--radius) / 2), calc(var(--radius) / 2 - var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg)))) rotate(300deg);
  border-right: calc(var(--radius) * 1.25 * sin(calc(var(--angle) * 1deg))) solid transparent;
  border-top: calc(var(--radius) * 1.25 * cos(calc(var(--angle) * 1deg))) solid rgb(254, 130, 42);
}
.currentSeconds{
  grid-column: 1/2;
  grid-row: 1/2;
}
#count_box {
  display: grid;
  place-items: center;
  height: var(--radius);
  width: var(--radius);
  grid-column: 2/5;
  grid-row: 2/5;
  font-family: "Courier Prime", monospace;
  font-size: 15px;
  font-weight: 700;
  font-style: normal;
  z-index: 1;
}
p{
  color: black;
  margin: 0;
}
h1 {
  text-align: center; /* テキストを中央揃え */
  /* margin-bottom: 1rem; /* 下部のマージンを追加 */
  color: rgb(254, 130, 42);
  grid-column: 1/-1;
  grid-row: 1;
  font-size: 35px; /* フォントサイズを大きくする */
  /* font-family: 'Noto Sans CJK JP', sans-serif; */
  /* font-family: Rubik Mono One; */
  font-family: Luckiest Guy;
  font-weight: 00;
  -webkit-text-stroke: 1px white;
   text-shadow:
       3px 3px 0 white,
     -1px -1px 0 white,  
      1px -1px 0 white,
      -1px 1px 0 white,
       1px 1px 0 white;
}

form {
  text-align: center; /* フォームの要素を中央揃え */
 /*  margin-bottom: 1rem; /* 下部のマージンを追加 */
  grid-column: 1/-1;
  grid-row: 8/9;
  width: 100%;
  color: white;
  padding: 20px; /* パディングを追加して要素をより目立たせる */
  border-radius: 10px; /* 角丸を追加 */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* シャドウを追加して立体感を与える */
}
/* フォーム内のテキストを白色に設定 */
form input[type="text"],
form input[type="email"],
form textarea {
  color: black;
}

/* フォーム内のボタンをポップな色に変更 */
form button {
  background-color: #f44336;
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease; /* ホバー時のアニメーションを追加 */
  font-family: Rubik Mono One;
}

form button:hover {
  background-color: darkred; /* ホバー時の背景色を暗くする */
}

#table {
  background-color: orange;
  width: 80%; /* 横幅を70%に変更 */
  max-width: 600px; /* 最大幅を設定 */
  border-radius: 1rem;
  margin: 1rem auto; /* 自動マージンで中央揃え */
  padding: 0 1rem 1rem 1rem;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* シャドウを追加 */
  grid-column: 1 / -1;
  grid-row: 10 / 11;
  border: 3px solid white; /* ボーダーを追加し、色を指定 */
  border-spacing: 0; /* セル間のスペースを0に設定 */
  border-collapse: separate; /* セルの境界線を分離 */
}

#table h2 {
  text-align: center;
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  /* font-size: 1.5rem; /* フォントサイズを大きく */
  font-size: 30px;
  color: rgb(101, 183, 65); /* 色を変更して強調 */
  /* font-family: Rubik Mono One; */
  font-family: Luckiest Guy;
  font-weight: bold; /* 太字にする */
  -webkit-text-stroke: 1px black;
   text-shadow:
       3px 3px 0 black,
     -1px -1px 0 black,  
      1px -1px 0 black,
      -1px 1px 0 black,
       1px 1px 0 black;
}

.task_list {
  list-style-type: none; /* デフォルトのリストスタイルを無効に */
  padding: 0;
  margin: 0;
}

.task_list li {
  background-color: white; /* 背景色を白に */
  margin: 0.5rem 0; /* 各項目の上下にマージンを追加 */
  padding: 0.5rem; /* 内側のパディングを追加 */
  border-radius: 0.5rem; /* 角を丸める */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* 各項目にもシャドウを追加 */
  display: flex;
  justify-content: space-between;
  align-items: center;
  border: 2px solid rgb(20, 30, 36); /* オレンジ色のボーダーを追加 */
}

.task_list li button {
  margin-left: 0.5rem;
  padding: 0.25rem 0.5rem;
  border: none;
  border-radius: 0.25rem;
  background-color: #f44336; /* ボタンの背景色を変更 */
  color: white; /* ボタンの文字色を白に */
  cursor: pointer;
  font-family: Rubik Mono One;
}

.task_list li button:hover {
  background-color: darkred; /* ホバー時の背景色を変更 */
}

.dialog {
  display: none;
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  justify-content: center;
  align-items: center;
  z-index: 1000; /* 他の要素の上に表示するためにz-indexを高く設定 */
}

.dialog-content {
  background-color: white;
  padding: 20px;
  border-radius: 10px;
  text-align: center;
}

#selected-task-display {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 16px;
  font-weight: bold;
  color: #333;
  z-index: 1;
}
